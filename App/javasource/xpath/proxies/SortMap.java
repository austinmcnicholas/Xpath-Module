// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package xpath.proxies;

public class SortMap
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject sortMapMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Xpath.SortMap";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		SortAttribute("SortAttribute"),
		SortAscending("SortAscending"),
		OrderInListOfSorts("OrderInListOfSorts"),
		SortMap_Xpath("Xpath.SortMap_Xpath");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public SortMap(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "Xpath.SortMap"));
	}

	protected SortMap(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject sortMapMendixObject)
	{
		if (sortMapMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("Xpath.SortMap", sortMapMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a Xpath.SortMap");

		this.sortMapMendixObject = sortMapMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'SortMap.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static xpath.proxies.SortMap initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return xpath.proxies.SortMap.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static xpath.proxies.SortMap initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new xpath.proxies.SortMap(context, mendixObject);
	}

	public static xpath.proxies.SortMap load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return xpath.proxies.SortMap.initialize(context, mendixObject);
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of SortAttribute
	 */
	public final java.lang.String getSortAttribute()
	{
		return getSortAttribute(getContext());
	}

	/**
	 * @param context
	 * @return value of SortAttribute
	 */
	public final java.lang.String getSortAttribute(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.SortAttribute.toString());
	}

	/**
	 * Set value of SortAttribute
	 * @param sortattribute
	 */
	public final void setSortAttribute(java.lang.String sortattribute)
	{
		setSortAttribute(getContext(), sortattribute);
	}

	/**
	 * Set value of SortAttribute
	 * @param context
	 * @param sortattribute
	 */
	public final void setSortAttribute(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String sortattribute)
	{
		getMendixObject().setValue(context, MemberNames.SortAttribute.toString(), sortattribute);
	}

	/**
	 * @return value of SortAscending
	 */
	public final java.lang.Boolean getSortAscending()
	{
		return getSortAscending(getContext());
	}

	/**
	 * @param context
	 * @return value of SortAscending
	 */
	public final java.lang.Boolean getSortAscending(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.SortAscending.toString());
	}

	/**
	 * Set value of SortAscending
	 * @param sortascending
	 */
	public final void setSortAscending(java.lang.Boolean sortascending)
	{
		setSortAscending(getContext(), sortascending);
	}

	/**
	 * Set value of SortAscending
	 * @param context
	 * @param sortascending
	 */
	public final void setSortAscending(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean sortascending)
	{
		getMendixObject().setValue(context, MemberNames.SortAscending.toString(), sortascending);
	}

	/**
	 * @return value of OrderInListOfSorts
	 */
	public final java.lang.Integer getOrderInListOfSorts()
	{
		return getOrderInListOfSorts(getContext());
	}

	/**
	 * @param context
	 * @return value of OrderInListOfSorts
	 */
	public final java.lang.Integer getOrderInListOfSorts(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.OrderInListOfSorts.toString());
	}

	/**
	 * Set value of OrderInListOfSorts
	 * @param orderinlistofsorts
	 */
	public final void setOrderInListOfSorts(java.lang.Integer orderinlistofsorts)
	{
		setOrderInListOfSorts(getContext(), orderinlistofsorts);
	}

	/**
	 * Set value of OrderInListOfSorts
	 * @param context
	 * @param orderinlistofsorts
	 */
	public final void setOrderInListOfSorts(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer orderinlistofsorts)
	{
		getMendixObject().setValue(context, MemberNames.OrderInListOfSorts.toString(), orderinlistofsorts);
	}

	/**
	 * @return value of SortMap_Xpath
	 */
	public final xpath.proxies.Xpath getSortMap_Xpath() throws com.mendix.core.CoreException
	{
		return getSortMap_Xpath(getContext());
	}

	/**
	 * @param context
	 * @return value of SortMap_Xpath
	 */
	public final xpath.proxies.Xpath getSortMap_Xpath(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		xpath.proxies.Xpath result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.SortMap_Xpath.toString());
		if (identifier != null)
			result = xpath.proxies.Xpath.load(context, identifier);
		return result;
	}

	/**
	 * Set value of SortMap_Xpath
	 * @param sortmap_xpath
	 */
	public final void setSortMap_Xpath(xpath.proxies.Xpath sortmap_xpath)
	{
		setSortMap_Xpath(getContext(), sortmap_xpath);
	}

	/**
	 * Set value of SortMap_Xpath
	 * @param context
	 * @param sortmap_xpath
	 */
	public final void setSortMap_Xpath(com.mendix.systemwideinterfaces.core.IContext context, xpath.proxies.Xpath sortmap_xpath)
	{
		if (sortmap_xpath == null)
			getMendixObject().setValue(context, MemberNames.SortMap_Xpath.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.SortMap_Xpath.toString(), sortmap_xpath.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return sortMapMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final xpath.proxies.SortMap that = (xpath.proxies.SortMap) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "Xpath.SortMap";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
